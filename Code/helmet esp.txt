#include <ESP8266WiFi.h>
#include <espnow.h>
#include <WiFiClientSecure.h>
#include <UniversalTelegramBot.h>
#include <SoftwareSerial.h>
#include <TinyGPS++.h>

String ssid = "Black Shadow";
String password = "mojo@60tk";
String latitude;
String longitude;
float Latitude1 , Longitude1;
const int RXPin = 4, TXPin = 5;
const uint32_t GPSBaud = 9600;
SoftwareSerial gps_module(RXPin, TXPin);
 
TinyGPSPlus gps;

float gps_speed;


#define BOTtoken "6737105009:AAF9vAydjjPjTBFdlMxVZIZmeavrUjAg5tU"
WiFiClientSecure client;

UniversalTelegramBot bot(BOTtoken, client);

int botRequestDelay = 0;

unsigned long lastTimeBotRan;

uint8_t broadcastAddress[] = { 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF };


typedef struct struct_message {

  int a;

} struct_message;
struct_message myData;


void OnDataRecv(uint8_t *mac, uint8_t *incomingData, uint8_t len) {
  memcpy(&myData, incomingData, sizeof(myData));
}
void OnDataSent(uint8_t *mac_addr, uint8_t sendStatus) {
}

void setup() {
  Serial.begin(115200);
  client.setInsecure();
  pinMode(D0, INPUT);
  pinMode(D3, INPUT);
  pinMode(D4, INPUT);
  WiFi.mode(WIFI_STA);
  WiFi.disconnect();
 gps_module.begin(GPSBaud);
  Serial.print("Connecting Wifi: ");

  Serial.println(ssid);

  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {

    Serial.println(".");

    delay(500);
  }

  Serial.println("");

  Serial.println("WiFi connected");

  if (esp_now_init() != 0) {
    Serial.println("Error initializing ESP-NOW");
    return;
  }


  esp_now_set_self_role(ESP_NOW_ROLE_CONTROLLER);
  esp_now_register_send_cb(OnDataSent);
  esp_now_add_peer(broadcastAddress, ESP_NOW_ROLE_SLAVE, 1, NULL, 0);

  esp_now_set_self_role(ESP_NOW_ROLE_SLAVE);
  esp_now_register_recv_cb(OnDataRecv);
}

void loop() {

 int IR = digitalRead(D0);
 int MQ = digitalRead(D3);
 int VR = digitalRead(D4);
 int speed=0;
 Serial.println(IR);
//   int numNewMessages = bot.getUpdates(bot.last_message_received + 1);
     
//  handleNewMessages(numNewMessages);
   // numNewMessages = bot.getUpdates(bot.last_message_received + 1);
  if (IR == 0 && MQ == 1) {
    myData.a = 1;
    esp_now_send(broadcastAddress, (uint8_t *)&myData, sizeof(myData));
  }
   else {
    myData.a = 0;
    esp_now_send(broadcastAddress, (uint8_t *)&myData, sizeof(myData));
  }

 if (gps_module.available() > 0) {
    if (gps.encode(gps_module.read()))
     if (gps.location.isValid()) {
    Latitude1 = gps.location.lat();
        latitude = String(Latitude1 , 6);
        Longitude1 = gps.location.lng();
         longitude= String(Longitude1 , 6);
    }
  }




  if (VR == 0) {
    bot.sendMessage("6139440308","accident");
String temp = "google.com/maps?&z=158mrt=yp&t=k&q=";

temp += String(latitude);

temp += "+";
temp +=String(longitude);

    bot.sendMessage("6139440308", temp,"");
  }
  
  if(speed>1){
    String Temp="The Over Speed: ";
        Temp+=int(gps.speed.kmph());
    bot.sendMessage("6139440308",Temp,"");
    speed=0;
  }
   
}

// void handleNewMessages(int numNewMessages) {
//   for (int i = 0; i < numNewMessages; i++) {

//     String chat_id = String(bot.messages[i].chat_id);

//     String text = bot.messages[i].text;

//     String from_name = bot.messages[i].from_name;

//     if (from_name == "") from_name = "Guest";

//     if (text == "are you active") {

//       String temp = "yes I am active";

//       bot.sendMessage(chat_id, temp, "");
//     }

//     if (text == "where") {
//      String temp = "google.com/maps?&z=158mrt=yp&t=k&q=";

//       temp += float(latitude);

//       temp += "+";
//       temp +=float(longitude);
//       bot.sendMessage(chat_id, temp, "");
//     }
//     Serial.println(chat_id);
//   }
// }LongitudeString